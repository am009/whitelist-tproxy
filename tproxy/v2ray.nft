#!/usr/sbin/nft -f

# 查看走代理的IPv4集合： nft list set inet v2ray proxy_v4
# 查看走代理的IPv6集合： nft list set inet v2ray proxy_v6
# china_v6
include "/usr/share/nftables.d/ruleset-post/chn_v6.h"
# https://core.telegram.org/resources/cidr.txt
define proxy_v4_permanent = {
	91.108.56.0/22, 91.108.4.0/22, 91.108.8.0/22, 91.108.16.0/22, 91.108.12.0/22, 149.154.160.0/20, 91.105.192.0/23, 91.108.20.0/22, 185.76.151.0/24, # telegram
	198.18.0.0/15 # fakeDNS
}
define proxy_v6_permanent = {
	2001:b28:f23d::/48, 2001:b28:f23f::/48, 2001:67c:4e8::/48, 2001:b28:f23c::/48, 2a0a:f280::/32 # telegram
}

table inet v2ray {
	set china_v6 {
		type ipv6_addr
		flags constant, interval
	}
	set proxy_v6 {
		type ipv6_addr
		flags interval, timeout
		timeout 1h
		counter
	}
	set proxy_v4 {
		type ipv4_addr
		flags timeout
		timeout 1h
		counter
	}
}
flush table inet v2ray
delete set inet v2ray china_v6
delete set inet v2ray proxy_v6
delete set inet v2ray proxy_v4
table inet v2ray {
	set china_v6 {
		type ipv6_addr
		flags constant, interval
		elements = $chn_v6
	}
	set proxy_v6 {
		type ipv6_addr
		flags interval, timeout
		timeout 1h
		counter
	}
	set proxy_v4 {
		type ipv4_addr
		flags timeout
		timeout 1h
		counter
	}

	chain prerouting {
		type filter hook prerouting priority filter - 1; policy accept;
		# ip saddr { 10.12.190.56, 172.19.192.2 } ip daddr { 10.12.190.56, 172.19.192.2 } udp sport 53 counter
		meta mark 0x000000ff counter return
		meta l4proto tcp socket transparent 1 meta mark set 1 counter accept
		# 内网/本机/服务器放行
		ip daddr { 127.0.0.1, 224.0.0.0/4, 255.255.255.255 } counter return
		ip saddr { 127.0.0.1, 224.0.0.0/4, 255.255.255.255 } counter return
		ip6 daddr {::1, fe80::/10, ff00::/8} counter return
		ip6 saddr {::1, fe80::/10, ff00::/8} counter return
		# 同时放行了本机
		ip daddr { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 } counter return
		ip6 daddr @china_v6 counter return
		ip6 daddr { 2001:250:4000::/48 } counter return
		# dns 放行 响应包目的地址是内网，因此无需处理。
		meta l4proto { tcp, udp } th dport 53 counter return
		# 必定走代理的IP段走代理
		meta l4proto { tcp, udp } ip daddr $proxy_v4_permanent meta mark set 0x00000001 tproxy ip to 127.0.0.1:12345 counter accept
		meta l4proto { tcp, udp } ip6 daddr $proxy_v6_permanent meta mark set 1 tproxy ip6 to [::1]:12345 counter accept
		# DNS服务器动态添加的IP段走代理 (注意配合路由表)
		meta l4proto { tcp, udp } ip daddr @proxy_v4 meta mark set 0x00000001 tproxy ip to 127.0.0.1:12345 counter accept
		meta l4proto { tcp, udp } ip6 daddr @proxy_v6 meta mark set 1 tproxy ip6 to [::1]:12345 counter accept
		# 其他包返回
		return
	}
}
